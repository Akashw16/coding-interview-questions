{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport Header from './components/Header';\nimport QuestionBlock from './components/QuestionBlock';\nimport QuestionsList from './components/QuestionsList';\nimport ThemeToggle from './components/ThemeToggle';\nimport SearchBar from './components/SearchBar';\nimport Login from './components/Login';\nimport UserDashboard from './components/UserDashboard';\nimport AdminDashboard from './components/AdminDashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.css';\nimport './styles/Responsive.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('loggedInUser') || null);\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [questionsData, setQuestionsData] = useState([]);\n  const questionRefs = useRef([]);\n  useEffect(() => {\n    // Fetch questions from backend\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5208/api/questions'); // Replace with your API endpoint\n        setQuestionsData(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n  const handleSearch = searchTerm => {\n    const index = questionsData.findIndex(q => q.questionText.toLowerCase().includes(searchTerm.toLowerCase()));\n    if (index !== -1) {\n      questionRefs.current[index].scrollIntoView({\n        behavior: 'smooth'\n      });\n    } else {\n      alert('Question not found!');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('loggedInUser');\n    localStorage.removeItem('role');\n    setLoggedInUser(null);\n  };\n  const userRole = localStorage.getItem('role');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n          isDarkMode: isDarkMode,\n          setIsDarkMode: setIsDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          questions: questionsData,\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), loggedInUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            children: \"Login/Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: loggedInUser ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: setLoggedInUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            requiredRole: \"user\",\n            children: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            requiredRole: \"admin\",\n            children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), questionsData.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: el => questionRefs.current[index] = el,\n              children: /*#__PURE__*/_jsxDEV(QuestionBlock, {\n                question: q.questionText,\n                code: q.codeSnippet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cdUhD4MRYXFCmmtHEi69uf8/mp0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Route","Routes","Link","Navigate","Header","QuestionBlock","QuestionsList","ThemeToggle","SearchBar","Login","UserDashboard","AdminDashboard","ProtectedRoute","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loggedInUser","setLoggedInUser","localStorage","getItem","isDarkMode","setIsDarkMode","questionsData","setQuestionsData","questionRefs","fetchQuestions","response","get","data","error","console","document","body","classList","add","remove","handleSearch","searchTerm","index","findIndex","q","questionText","toLowerCase","includes","current","scrollIntoView","behavior","alert","handleLogout","removeItem","userRole","children","className","fileName","_jsxFileName","lineNumber","columnNumber","questions","onSearch","onClick","to","path","element","onLogin","requiredRole","map","ref","el","question","code","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport Header from './components/Header';\nimport QuestionBlock from './components/QuestionBlock';\nimport QuestionsList from './components/QuestionsList';\n\nimport ThemeToggle from './components/ThemeToggle';\nimport SearchBar from './components/SearchBar';\nimport Login from './components/Login';\nimport UserDashboard from './components/UserDashboard';\nimport AdminDashboard from './components/AdminDashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.css';\nimport './styles/Responsive.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('loggedInUser') || null);\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [questionsData, setQuestionsData] = useState([]);\n  const questionRefs = useRef([]);\n\n  useEffect(() => {\n    // Fetch questions from backend\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5208/api/questions');  // Replace with your API endpoint\n        setQuestionsData(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n\n  const handleSearch = (searchTerm) => {\n    const index = questionsData.findIndex((q) =>\n      q.questionText.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (index !== -1) {\n      questionRefs.current[index].scrollIntoView({ behavior: 'smooth' });\n    } else {\n      alert('Question not found!');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('loggedInUser');\n    localStorage.removeItem('role');\n    setLoggedInUser(null);\n  };\n\n  const userRole = localStorage.getItem('role');\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"header-controls\">\n          <ThemeToggle isDarkMode={isDarkMode} setIsDarkMode={setIsDarkMode} />\n          <SearchBar questions={questionsData} onSearch={handleSearch} />\n          {loggedInUser ? (\n            <button className=\"login-button\" onClick={handleLogout}>\n              Logout\n            </button>\n          ) : (\n            <Link to=\"/login\">\n              <button className=\"login-button\">Login/Sign Up</button>\n            </Link>\n          )}\n        </div>\n\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={loggedInUser ? <Navigate to=\"/\" /> : <Login onLogin={setLoggedInUser} />}\n          />\n          <Route\n            path=\"/user-dashboard\"\n            element={\n              <ProtectedRoute requiredRole=\"user\">\n                <UserDashboard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/admin-dashboard\"\n            element={\n              <ProtectedRoute requiredRole=\"admin\">\n                <AdminDashboard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <Header />\n                {questionsData.map((q, index) => (\n                  <div key={index} ref={(el) => (questionRefs.current[index] = el)}>\n                    <QuestionBlock question={q.questionText} code={q.codeSnippet} />\n                  </div>\n                ))}\n              </>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
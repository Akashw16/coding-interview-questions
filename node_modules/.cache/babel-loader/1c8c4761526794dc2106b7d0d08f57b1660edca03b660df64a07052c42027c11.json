{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionAndCodeBlock.js\";\nimport React from 'react';\nimport '../styles/QuestionsList.css';\nimport copyIcon from '../assets/copy-icon-size_24.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionAndCodeBlock = ({\n  questionId,\n  questionText,\n  code\n}) => {\n  const copyToClipboard = () => {\n    if (code) {\n      navigator.clipboard.writeText(code);\n      alert('Code copied to clipboard!');\n    } else {\n      alert('No code available to copy!');\n    }\n  };\n  const formatCodeWithComments = code => {\n    if (!code) return '';\n    const commentRegex = /(\\/\\/.*$)/gm;\n    return code.replace(commentRegex, '<span class=\"comment-line\">$1</span>');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-and-code-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-block-container slide-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-block fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            dangerouslySetInnerHTML: {\n              __html: formatCodeWithComments(code)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: copyToClipboard,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: copyIcon,\n            alt: \"Copy\",\n            className: \"copy-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionAndCodeBlock;\nexport default QuestionAndCodeBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionAndCodeBlock\");","map":{"version":3,"names":["React","copyIcon","jsxDEV","_jsxDEV","QuestionAndCodeBlock","questionId","questionText","code","copyToClipboard","navigator","clipboard","writeText","alert","formatCodeWithComments","commentRegex","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","src","alt","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionAndCodeBlock.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/QuestionsList.css';\r\nimport copyIcon from '../assets/copy-icon-size_24.png';\r\n\r\nconst QuestionAndCodeBlock = ({ questionId, questionText, code }) => {\r\n  const copyToClipboard = () => {\r\n    if (code) {\r\n      navigator.clipboard.writeText(code);\r\n      alert('Code copied to clipboard!');\r\n    } else {\r\n      alert('No code available to copy!');\r\n    }\r\n  };\r\n\r\n  const formatCodeWithComments = (code) => {\r\n    if (!code) return '';\r\n    const commentRegex = /(\\/\\/.*$)/gm;\r\n    return code.replace(commentRegex, '<span class=\"comment-line\">$1</span>');\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-and-code-block\">\r\n      <h2>{questionText}</h2>  {/* Display the question text */}\r\n      <div className=\"code-block-container slide-in\">\r\n        <div className=\"code-block fade-in\">\r\n          <pre>\r\n            <code dangerouslySetInnerHTML={{ __html: formatCodeWithComments(code) }} />\r\n          </pre>\r\n          <button className=\"copy-button\" onClick={copyToClipboard}>\r\n            <img src={copyIcon} alt=\"Copy\" className=\"copy-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAndCodeBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AACpC,OAAOC,QAAQ,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAK,CAAC,KAAK;EACnE,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAID,IAAI,EAAE;MACRE,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,IAAI,CAAC;MACnCK,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,MAAM;MACLA,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,MAAMC,sBAAsB,GAAIN,IAAI,IAAK;IACvC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAMO,YAAY,GAAG,aAAa;IAClC,OAAOP,IAAI,CAACQ,OAAO,CAACD,YAAY,EAAE,sCAAsC,CAAC;EAC3E,CAAC;EAED,oBACEX,OAAA;IAAKa,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCd,OAAA;MAAAc,QAAA,EAAKX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,MAAE,eACzBlB,OAAA;MAAKa,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5Cd,OAAA;QAAKa,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCd,OAAA;UAAAc,QAAA,eACEd,OAAA;YAAMmB,uBAAuB,EAAE;cAAEC,MAAM,EAAEV,sBAAsB,CAACN,IAAI;YAAE;UAAE;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNlB,OAAA;UAAQa,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEhB,eAAgB;UAAAS,QAAA,eACvDd,OAAA;YAAKsB,GAAG,EAAExB,QAAS;YAACyB,GAAG,EAAC,MAAM;YAACV,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GA/BIvB,oBAAoB;AAiC1B,eAAeA,oBAAoB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
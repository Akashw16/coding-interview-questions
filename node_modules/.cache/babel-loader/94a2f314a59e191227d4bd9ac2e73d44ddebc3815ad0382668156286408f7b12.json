{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\ThemeToggle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = ({\n  isDarkMode,\n  setIsDarkMode\n}) => {\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('darkMode', !isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"theme-toggle-button\",\n    onClick: toggleTheme,\n    children: isDarkMode ? 'Bright Mode' : 'Dark Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ThemeToggle","isDarkMode","setIsDarkMode","toggleTheme","localStorage","setItem","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/ThemeToggle.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ThemeToggle = ({ isDarkMode, setIsDarkMode }) => {\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('darkMode', !isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <button className=\"theme-toggle-button\" onClick={toggleTheme}>\r\n      {isDarkMode ? 'Bright Mode' : 'Dark Mode'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EACrD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,CAACJ,UAAU,CAAC;EAC/C,CAAC;EAED,oBACEF,OAAA;IAAQO,SAAS,EAAC,qBAAqB;IAACC,OAAO,EAAEJ,WAAY;IAAAK,QAAA,EAC1DP,UAAU,GAAG,aAAa,GAAG;EAAW;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEb,CAAC;AAACC,EAAA,GAXIb,WAAW;AAajB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
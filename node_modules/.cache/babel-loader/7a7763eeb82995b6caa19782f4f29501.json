{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport '../styles/QuestionBlock.css';\nimport { addBookmark, removeBookmark } from './bookmarkApi'; // Import removeBookmark\n\nconst QuestionBlock = ({\n  question,\n  code\n}) => {\n  const [bookmarked, setBookmarked] = useState(false);\n  useEffect(() => {\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\n    setBookmarked(savedBookmarks.includes(question));\n  }, [question]);\n  const handleBookmark = async () => {\n    try {\n      if (bookmarked) {\n        // Assuming you pass the question ID for removing bookmark\n        await removeBookmark(question.id);\n      } else {\n        await addBookmark({\n          questionId: question.id\n        });\n      }\n      setBookmarked(!bookmarked);\n    } catch (error) {\n      console.error('Error while handling bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, question), /*#__PURE__*/React.createElement(Tabs, {\n    languages: ['C', 'C++', 'Java', 'Python'],\n    onTabClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CodeBlock, {\n    code: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bookmark-button\",\n    onClick: handleBookmark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, bookmarked ? 'Unbookmark' : 'Bookmark'));\n};\nexport default QuestionBlock;","map":{"version":3,"names":["React","useState","useEffect","Tabs","CodeBlock","addBookmark","removeBookmark","QuestionBlock","question","code","bookmarked","setBookmarked","savedBookmarks","JSON","parse","localStorage","getItem","includes","handleBookmark","id","questionId","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","languages","onTabClick","onClick"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport '../styles/QuestionBlock.css';\r\nimport { addBookmark, removeBookmark } from './bookmarkApi';  // Import removeBookmark\r\n\r\nconst QuestionBlock = ({ question, code }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\r\n    setBookmarked(savedBookmarks.includes(question));\r\n  }, [question]);\r\n\r\n  const handleBookmark = async () => {\r\n    try {\r\n      if (bookmarked) {\r\n        // Assuming you pass the question ID for removing bookmark\r\n        await removeBookmark(question.id);\r\n      } else {\r\n        await addBookmark({ questionId: question.id });\r\n      }\r\n      setBookmarked(!bookmarked);\r\n    } catch (error) {\r\n      console.error('Error while handling bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,6BAA6B;AACpC,SAASC,WAAW,EAAEC,cAAc,QAAQ,eAAe,CAAC,CAAE;;AAE9D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1EL,aAAa,CAACC,cAAc,CAACK,QAAQ,CAACT,QAAQ,CAAC,CAAC;EAClD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,IAAIR,UAAU,EAAE;QACd;QACA,MAAMJ,cAAc,CAACE,QAAQ,CAACW,EAAE,CAAC;MACnC,CAAC,MAAM;QACL,MAAMd,WAAW,CAAC;UAAEe,UAAU,EAAEZ,QAAQ,CAACW;QAAG,CAAC,CAAC;MAChD;MACAR,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACErB,KAAA,CAAAuB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B9B,KAAA,CAAAuB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,QAAa,CAAC,eACnBR,KAAA,CAAAuB,aAAA,CAACpB,IAAI;IAAC4B,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAE;IAACC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzE9B,KAAA,CAAAuB,aAAA,CAACnB,SAAS;IAACK,IAAI,EAAEA,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzB9B,KAAA,CAAAuB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACS,OAAO,EAAEf,cAAe;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDpB,UAAU,GAAG,YAAY,GAAG,UACvB,CACL,CAAC;AAEV,CAAC;AAED,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}
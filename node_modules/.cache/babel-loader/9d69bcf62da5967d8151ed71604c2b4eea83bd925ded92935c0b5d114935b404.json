{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = ({\n  questionId\n}) => {\n  const handleBookmark = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert(\"You need to be logged in to bookmark questions.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5208/api/bookmarks/${questionId}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert(\"Question bookmarked successfully!\");\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to bookmark the question: ${errorData.message || response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error bookmarking question:', error);\n      alert(\"An error occurred while bookmarking the question.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookmark,\n      children: \"Bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","QuestionBlock","questionId","handleBookmark","token","localStorage","getItem","alert","response","fetch","method","headers","ok","errorData","json","message","statusText","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst QuestionBlock = ({ questionId }) => {\r\n  const handleBookmark = async () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      alert(\"You need to be logged in to bookmark questions.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5208/api/bookmarks/${questionId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Question bookmarked successfully!\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to bookmark the question: ${errorData.message || response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error bookmarking question:', error);\r\n      alert(\"An error occurred while bookmarking the question.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleBookmark}>Bookmark</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACxC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,iDAAiD,CAAC;MACxD;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCP,UAAU,EAAE,EAAE;QAChFQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUP,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACI,EAAE,EAAE;QACfL,KAAK,CAAC,mCAAmC,CAAC;MAC5C,CAAC,MAAM;QACL,MAAMM,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvCP,KAAK,CAAC,oCAAoCM,SAAS,CAACE,OAAO,IAAIP,QAAQ,CAACQ,UAAU,EAAE,CAAC;MACvF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDV,KAAK,CAAC,mDAAmD,CAAC;IAC5D;EACF,CAAC;EAED,oBACEP,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAQoB,OAAO,EAAEjB,cAAe;MAAAgB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACC,EAAA,GAnCIxB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
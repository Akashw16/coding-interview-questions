{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\ThemeToggle.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles/ThemeToggle.css';\nconst ThemeToggle = () => {\n  // Load dark mode preference from localStorage, default to false\n  const [darkMode, setDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  useEffect(() => {\n    // Apply the dark mode class based on the state\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n    localStorage.setItem('darkMode', !darkMode); // Save the preference in localStorage\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"theme-toggle\",\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, darkMode ? '‚òÄÔ∏è Bright Mode' : 'üåô Dark Mode');\n};\nexport default ThemeToggle;","map":{"version":3,"names":["React","useState","useEffect","ThemeToggle","darkMode","setDarkMode","localStorage","getItem","document","body","classList","add","remove","toggleTheme","setItem","createElement","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/website/coding-interview-questions/src/components/ThemeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/ThemeToggle.css';\r\n\r\nconst ThemeToggle = () => {\r\n  // Load dark mode preference from localStorage, default to false\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    return localStorage.getItem('darkMode') === 'true';\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Apply the dark mode class based on the state\r\n    if (darkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setDarkMode(!darkMode);\r\n    localStorage.setItem('darkMode', !darkMode); // Save the preference in localStorage\r\n  };\r\n\r\n  return (\r\n    <button className=\"theme-toggle\" onClick={toggleTheme}>\r\n      {darkMode ? '‚òÄÔ∏è Bright Mode' : 'üåô Dark Mode'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B;AAElC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,MAAM;IAC7C,OAAOK,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;EACpD,CAAC,CAAC;EAEFL,SAAS,CAAC,MAAM;IACd;IACA,IAAIE,QAAQ,EAAE;MACZI,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtBE,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAE,CAACV,QAAQ,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEJ,KAAA,CAAAe,aAAA;IAAQC,SAAS,EAAC,cAAc;IAACC,OAAO,EAAEJ,WAAY;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnDnB,QAAQ,GAAG,gBAAgB,GAAG,cACzB,CAAC;AAEb,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}
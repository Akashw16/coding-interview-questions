{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport bookmarkService from './bookmarkService'; // Service for fetching bookmarks\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock'; // Component similar to home page to display questions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const questions = await bookmarkService.getBookmarks();\n        setBookmarkedQuestions(questions);\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n      }\n    };\n    fetchBookmarkedQuestions();\n  }, []);\n  if (bookmarkedQuestions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookmarked questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), bookmarkedQuestions.map(question => /*#__PURE__*/_jsxDEV(QuestionAndCodeBlock, {\n      questionId: question.id,\n      code: question.CodeSnippet,\n      questionText: question.QuestionText // Added for display\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"d32rATL6AIkwjwUOLpM1Gu/cwms=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","bookmarkService","QuestionAndCodeBlock","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","fetchBookmarkedQuestions","questions","getBookmarks","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","questionId","id","code","CodeSnippet","questionText","QuestionText","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bookmarkService from './bookmarkService'; // Service for fetching bookmarks\r\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock'; // Component similar to home page to display questions\r\n\r\nconst UserDashboard = () => {\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookmarkedQuestions = async () => {\r\n      try {\r\n        const questions = await bookmarkService.getBookmarks();\r\n        setBookmarkedQuestions(questions);\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarked questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchBookmarkedQuestions();\r\n  }, []);\r\n\r\n  if (bookmarkedQuestions.length === 0) {\r\n    return <p>No bookmarked questions found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-dashboard\">\r\n      <h1>Your Bookmarked Questions</h1>\r\n      {bookmarkedQuestions.map((question) => (\r\n        <QuestionAndCodeBlock\r\n          key={question.id}\r\n          questionId={question.id}\r\n          code={question.CodeSnippet}\r\n          questionText={question.QuestionText}  // Added for display\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AACjD,OAAOC,oBAAoB,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd,MAAMS,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMT,eAAe,CAACU,YAAY,CAAC,CAAC;QACtDH,sBAAsB,CAACE,SAAS,CAAC;MACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDH,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,mBAAmB,CAACO,MAAM,KAAK,CAAC,EAAE;IACpC,oBAAOV,OAAA;MAAAW,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9C;EAEA,oBACEf,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCZ,mBAAmB,CAACc,GAAG,CAAEC,QAAQ,iBAChClB,OAAA,CAACF,oBAAoB;MAEnBqB,UAAU,EAAED,QAAQ,CAACE,EAAG;MACxBC,IAAI,EAAEH,QAAQ,CAACI,WAAY;MAC3BC,YAAY,EAAEL,QAAQ,CAACM,YAAa,CAAE;IAAA,GAHjCN,QAAQ,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACb,EAAA,CAjCID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
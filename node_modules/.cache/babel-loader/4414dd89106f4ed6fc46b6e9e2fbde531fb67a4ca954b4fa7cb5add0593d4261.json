{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const [questionsData, setQuestionsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5208/api/questions');\n        setQuestionsData(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false); // Set loading to false after data is fetched\n      }\n    };\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : questionsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : questionsData.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: question.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"D8Wk+I4+jyWm36f/xoDzcoIuMj8=\");\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuestionsList","_s","questionsData","setQuestionsData","loading","setLoading","fetchQuestions","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","questionText","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuestionsList = () => {\r\n  const [questionsData, setQuestionsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5208/api/questions');\r\n        setQuestionsData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      } finally {\r\n        setLoading(false);  // Set loading to false after data is fetched\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading questions...</p>\r\n      ) : questionsData.length === 0 ? (\r\n        <p>No questions available</p>\r\n      ) : (\r\n        questionsData.map((question, index) => (\r\n          <div key={index}>\r\n            <h2>{question.questionText}</h2>\r\n            <pre>{question.codeSnippet}</pre>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qCAAqC,CAAC;QACvEL,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAa,QAAA,EACGR,OAAO,gBACNL,OAAA;MAAAa,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACzBd,aAAa,CAACe,MAAM,KAAK,CAAC,gBAC5BlB,OAAA;MAAAa,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE7Bd,aAAa,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChCrB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKO,QAAQ,CAACE;MAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCjB,OAAA;QAAAa,QAAA,EAAMO,QAAQ,CAACG;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFzBI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
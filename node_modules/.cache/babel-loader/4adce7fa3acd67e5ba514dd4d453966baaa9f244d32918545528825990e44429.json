{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport '../styles/QuestionBlock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = ({\n  question,\n  code\n}) => {\n  _s();\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // Load token from localStorage\n  const token = localStorage.getItem('token');\n\n  // Load bookmarks on component mount\n  useEffect(() => {\n    const fetchBookmarks = async () => {\n      try {\n        console.log(\"Token in fetchBookmarks:\", token);\n        const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const userBookmarks = response.data;\n        setBookmarked(userBookmarks.includes(question.id));\n        console.log(\"Fetched bookmarks:\", userBookmarks);\n      } catch (error) {\n        console.error('Error fetching bookmarks:', error);\n      }\n    };\n    if (token) {\n      fetchBookmarks();\n    }\n  }, [question.id, token]);\n\n  // Handle bookmark toggle\n  const handleBookmark = async () => {\n    try {\n      const bookmarkRequest = {\n        questionId: question.id\n      };\n      const url = bookmarked ? 'http://localhost:5208/api/bookmarks/remove' : 'http://localhost:5208/api/bookmarks/add';\n      console.log(\"Bookmark Request:\", bookmarkRequest);\n      console.log(\"URL:\", url);\n      console.log(\"Token:\", token);\n      const response = await axios.post(url, bookmarkRequest, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        setBookmarked(!bookmarked);\n      }\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      languages: ['C', 'C++', 'Java', 'Python'],\n      onTabClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n      code: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bookmark-button\",\n      onClick: handleBookmark,\n      children: bookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBlock, \"cgfO4QFgT+YKaEUM6gxq7mPRzac=\");\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Tabs","CodeBlock","jsxDEV","_jsxDEV","QuestionBlock","question","code","_s","bookmarked","setBookmarked","token","localStorage","getItem","fetchBookmarks","console","log","response","get","headers","Authorization","userBookmarks","data","includes","id","error","handleBookmark","bookmarkRequest","questionId","url","post","status","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","languages","onTabClick","onClick","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport '../styles/QuestionBlock.css';\r\n\r\nconst QuestionBlock = ({ question, code }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  // Load token from localStorage\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Load bookmarks on component mount\r\n  useEffect(() => {\r\n    const fetchBookmarks = async () => {\r\n      try {\r\n        console.log(\"Token in fetchBookmarks:\", token);\r\n\r\n        const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const userBookmarks = response.data;\r\n        setBookmarked(userBookmarks.includes(question.id));\r\n        console.log(\"Fetched bookmarks:\", userBookmarks);\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarks:', error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchBookmarks();\r\n    }\r\n  }, [question.id, token]);\r\n\r\n  // Handle bookmark toggle\r\n  const handleBookmark = async () => {\r\n    try {\r\n      const bookmarkRequest = { questionId: question.id };\r\n      const url = bookmarked\r\n        ? 'http://localhost:5208/api/bookmarks/remove'\r\n        : 'http://localhost:5208/api/bookmarks/add';\r\n\r\n      console.log(\"Bookmark Request:\", bookmarkRequest);\r\n      console.log(\"URL:\", url);\r\n      console.log(\"Token:\", token);\r\n\r\n      const response = await axios.post(url, bookmarkRequest, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setBookmarked(!bookmarked);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question.title}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
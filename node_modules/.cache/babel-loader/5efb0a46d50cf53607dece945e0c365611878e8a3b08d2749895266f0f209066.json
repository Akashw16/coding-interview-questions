{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionsList.js\";\nimport React from 'react';\nimport '../styles/QuestionsList.css';\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = ({\n  questionsData = []\n}) => {\n  // Check if questionsData is an array and has elements\n  if (!Array.isArray(questionsData) || questionsData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available or an issue occurred while fetching data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-list\",\n    children: questionsData.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: q.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAndCodeBlock, {\n        questionId: q.id,\n        code: q.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","QuestionAndCodeBlock","jsxDEV","_jsxDEV","QuestionsList","questionsData","Array","isArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","q","index","questionText","questionId","id","code","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionsList.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/QuestionsList.css';\r\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\r\n\r\nconst QuestionsList = ({ questionsData = [] }) => {\r\n  // Check if questionsData is an array and has elements\r\n  if (!Array.isArray(questionsData) || questionsData.length === 0) {\r\n    return <p>No questions available or an issue occurred while fetching data.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"questions-list\">\r\n      {questionsData.map((q, index) => (\r\n        <div key={q.id}>\r\n          <h2>{q.questionText}</h2>\r\n          <QuestionAndCodeBlock questionId={q.id} code={q.codeSnippet} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AACpC,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,aAAa,GAAG;AAAG,CAAC,KAAK;EAChD;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,aAAa,CAAC,IAAIA,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;IAC/D,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAgE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChF;EAEA,oBACEV,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAL,QAAA,EAC5BJ,aAAa,CAACU,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC1Bd,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,EAAKO,CAAC,CAACE;MAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBV,OAAA,CAACF,oBAAoB;QAACkB,UAAU,EAAEH,CAAC,CAACI,EAAG;QAACC,IAAI,EAAEL,CAAC,CAACM;MAAY;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFvDG,CAAC,CAACI,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACU,EAAA,GAhBInB,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
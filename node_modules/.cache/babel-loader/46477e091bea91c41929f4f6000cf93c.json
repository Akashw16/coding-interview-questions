{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport { addBookmark } from './bookmarkApi'; // Import your bookmark function\nimport { decode as jwt_decode } from 'jwt-decode'; // Correct named import\nimport '../styles/QuestionBlock.css';\nconst QuestionBlock = ({\n  question,\n  code\n}) => {\n  const [bookmarked, setBookmarked] = useState(false);\n  useEffect(() => {\n    // Optionally load bookmark status from server or localStorage\n  }, []);\n  const handleBookmark = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error(\"User is not logged in\");\n\n      // Decode the JWT token to get the user ID\n      const decodedToken = jwt_decode(token);\n      const userId = decodedToken.userId; // Assuming the JWT contains `userId`\n\n      // Create the bookmark request\n      const bookmarkRequest = {\n        userId: userId,\n        // Extracted from the JWT\n        questionId: question.id // Assuming question object has an ID field\n      };\n\n      // Call the addBookmark function\n      await addBookmark(bookmarkRequest);\n      setBookmarked(true); // Update state on success\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, question.title), /*#__PURE__*/React.createElement(Tabs, {\n    languages: ['C', 'C++', 'Java', 'Python'],\n    onTabClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CodeBlock, {\n    code: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bookmark-button\",\n    onClick: handleBookmark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, bookmarked ? 'Unbookmark' : 'Bookmark'));\n};\nexport default QuestionBlock;","map":{"version":3,"names":["React","useState","useEffect","Tabs","CodeBlock","addBookmark","decode","jwt_decode","QuestionBlock","question","code","bookmarked","setBookmarked","handleBookmark","token","localStorage","getItem","Error","decodedToken","userId","bookmarkRequest","questionId","id","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","languages","onTabClick","onClick"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport { addBookmark } from './bookmarkApi'; // Import your bookmark function\r\nimport { decode as jwt_decode } from 'jwt-decode'; // Correct named import\r\nimport '../styles/QuestionBlock.css';\r\n\r\nconst QuestionBlock = ({ question, code }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Optionally load bookmark status from server or localStorage\r\n  }, []);\r\n\r\n  const handleBookmark = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) throw new Error(\"User is not logged in\");\r\n\r\n      // Decode the JWT token to get the user ID\r\n      const decodedToken = jwt_decode(token);\r\n      const userId = decodedToken.userId; // Assuming the JWT contains `userId`\r\n\r\n      // Create the bookmark request\r\n      const bookmarkRequest = {\r\n        userId: userId, // Extracted from the JWT\r\n        questionId: question.id, // Assuming question object has an ID field\r\n      };\r\n\r\n      // Call the addBookmark function\r\n      await addBookmark(bookmarkRequest);\r\n      setBookmarked(true); // Update state on success\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question.title}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAC7C,SAASC,MAAM,IAAIC,UAAU,QAAQ,YAAY,CAAC,CAAC;AACnD,OAAO,6BAA6B;AAEpC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;;MAEpD;MACA,MAAMC,YAAY,GAAGX,UAAU,CAACO,KAAK,CAAC;MACtC,MAAMK,MAAM,GAAGD,YAAY,CAACC,MAAM,CAAC,CAAC;;MAEpC;MACA,MAAMC,eAAe,GAAG;QACtBD,MAAM,EAAEA,MAAM;QAAE;QAChBE,UAAU,EAAEZ,QAAQ,CAACa,EAAE,CAAE;MAC3B,CAAC;;MAED;MACA,MAAMjB,WAAW,CAACe,eAAe,CAAC;MAClCR,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEvB,KAAA,CAAAyB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BhC,KAAA,CAAAyB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvB,QAAQ,CAACwB,KAAU,CAAC,eACzBjC,KAAA,CAAAyB,aAAA,CAACtB,IAAI;IAAC+B,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAE;IAACC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzEhC,KAAA,CAAAyB,aAAA,CAACrB,SAAS;IAACM,IAAI,EAAEA,IAAK;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzBhC,KAAA,CAAAyB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACU,OAAO,EAAEvB,cAAe;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDrB,UAAU,GAAG,YAAY,GAAG,UACvB,CACL,CAAC;AAEV,CAAC;AAED,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}
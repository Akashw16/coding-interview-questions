{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport { addBookmark, removeBookmark, fetchBookmarks } from '../api/bookmarkApi';\nimport '../styles/QuestionBlock.css';\nconst QuestionBlock = ({\n  questionId,\n  question,\n  code\n}) => {\n  const [bookmarked, setBookmarked] = useState(false);\n  useEffect(() => {\n    const fetchUserBookmarks = async () => {\n      try {\n        const bookmarks = await fetchBookmarks();\n        setBookmarked(bookmarks.some(b => b.question.id === questionId));\n      } catch (error) {\n        console.error('Error fetching bookmarks:', error);\n      }\n    };\n    fetchUserBookmarks();\n  }, [questionId]);\n  const handleBookmark = async () => {\n    try {\n      if (bookmarked) {\n        await removeBookmark(questionId);\n      } else {\n        await addBookmark(questionId);\n      }\n      setBookmarked(!bookmarked);\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, question), /*#__PURE__*/React.createElement(Tabs, {\n    languages: ['C', 'C++', 'Java', 'Python'],\n    onTabClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CodeBlock, {\n    code: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bookmark-button\",\n    onClick: handleBookmark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, bookmarked ? 'Unbookmark' : 'Bookmark'));\n};\nexport default QuestionBlock;","map":{"version":3,"names":["React","useState","useEffect","Tabs","CodeBlock","addBookmark","removeBookmark","fetchBookmarks","QuestionBlock","questionId","question","code","bookmarked","setBookmarked","fetchUserBookmarks","bookmarks","some","b","id","error","console","handleBookmark","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","languages","onTabClick","onClick"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport { addBookmark, removeBookmark, fetchBookmarks } from '../api/bookmarkApi';\r\nimport '../styles/QuestionBlock.css';\r\n\r\nconst QuestionBlock = ({ questionId, question, code }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBookmarks = async () => {\r\n      try {\r\n        const bookmarks = await fetchBookmarks();\r\n        setBookmarked(bookmarks.some((b) => b.question.id === questionId));\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarks:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserBookmarks();\r\n  }, [questionId]);\r\n\r\n  const handleBookmark = async () => {\r\n    try {\r\n      if (bookmarked) {\r\n        await removeBookmark(questionId);\r\n      } else {\r\n        await addBookmark(questionId);\r\n      }\r\n      setBookmarked(!bookmarked);\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,EAAEC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AAChF,OAAO,6BAA6B;AAEpC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EACxD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMR,cAAc,CAAC,CAAC;QACxCM,aAAa,CAACE,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,QAAQ,CAACQ,EAAE,KAAKT,UAAU,CAAC,CAAC;MACpE,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,IAAIT,UAAU,EAAE;QACd,MAAMN,cAAc,CAACG,UAAU,CAAC;MAClC,CAAC,MAAM;QACL,MAAMJ,WAAW,CAACI,UAAU,CAAC;MAC/B;MACAI,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEnB,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKnB,QAAa,CAAC,eACnBV,KAAA,CAAAsB,aAAA,CAACnB,IAAI;IAAC2B,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAE;IAACC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzE7B,KAAA,CAAAsB,aAAA,CAAClB,SAAS;IAACO,IAAI,EAAEA,IAAK;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzB7B,KAAA,CAAAsB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACS,OAAO,EAAEX,cAAe;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDjB,UAAU,GAAG,YAAY,GAAG,UACvB,CACL,CAAC;AAEV,CAAC;AAED,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}
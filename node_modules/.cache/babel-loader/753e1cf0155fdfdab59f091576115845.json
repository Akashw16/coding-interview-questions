{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5208/api';\nexport const fetchBookmarks = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/bookmarks`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addBookmark = async questionId => {\n  try {\n    const response = await axios.post(`${API_URL}/bookmarks/add`, {\n      questionId\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const removeBookmark = async questionId => {\n  try {\n    const response = await axios.delete(`${API_URL}/bookmarks/remove/${questionId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchBookmarks","response","get","headers","Authorization","localStorage","getItem","data","error","addBookmark","questionId","post","removeBookmark","delete"],"sources":["E:/website/coding-interview-questions/src/components/bookmarkApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5208/api';\r\n\r\nexport const fetchBookmarks = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/bookmarks`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addBookmark = async (questionId) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/bookmarks/add`,\r\n      { questionId },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const removeBookmark = async (questionId) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/bookmarks/remove/${questionId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAY,EAAE;MACvDI,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAC/B,GAAGZ,OAAO,gBAAgB,EAC1B;MAAEW;IAAW,CAAC,EACd;MACEP,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CACF,CAAC;IACD,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAOF,UAAU,IAAK;EAClD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,qBAAqBW,UAAU,EAAE,EAAE;MAC/EP,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
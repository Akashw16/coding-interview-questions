{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport '../styles/QuestionBlock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = ({\n  question,\n  code\n}) => {\n  _s();\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // Load token from localStorage\n  const token = localStorage.getItem('token');\n  console.log(\"Retrieved Token:\", token); // Check if token is retrieved correctly\n\n  // Load bookmarks on component mount\n  useEffect(() => {\n    const fetchBookmarks = async () => {\n      if (!token) {\n        console.error(\"No token found in localStorage\");\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Bookmarks fetched:\", response.data); // Debugging\n        const userBookmarks = response.data;\n        setBookmarked(userBookmarks.includes(question.id));\n      } catch (error) {\n        console.error('Error fetching bookmarks:', error.response ? error.response.data : error.message);\n      }\n    };\n    fetchBookmarks();\n  }, [question.id, token]);\n\n  // Handle bookmark toggle\n  const handleBookmark = async () => {\n    if (!token) {\n      console.error(\"No token found in localStorage\");\n      return;\n    }\n    try {\n      const bookmarkRequest = {\n        questionId: question.id\n      };\n      const url = bookmarked ? 'http://localhost:5208/api/bookmarks/remove' : 'http://localhost:5208/api/bookmarks/add';\n      const response = await axios.post(url, bookmarkRequest, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Bookmark operation response:\", response.data); // Debugging\n\n      setBookmarked(!bookmarked);\n    } catch (error) {\n      console.error('Error updating bookmark:', error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      languages: ['C', 'C++', 'Java', 'Python'],\n      onTabClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n      code: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bookmark-button\",\n      onClick: handleBookmark,\n      children: bookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBlock, \"cgfO4QFgT+YKaEUM6gxq7mPRzac=\");\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Tabs","CodeBlock","jsxDEV","_jsxDEV","QuestionBlock","question","code","_s","bookmarked","setBookmarked","token","localStorage","getItem","console","log","fetchBookmarks","error","response","get","headers","Authorization","data","userBookmarks","includes","id","message","handleBookmark","bookmarkRequest","questionId","url","post","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","languages","onTabClick","onClick","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport '../styles/QuestionBlock.css';\r\n\r\nconst QuestionBlock = ({ question, code }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  // Load token from localStorage\r\n  const token = localStorage.getItem('token');\r\n  console.log(\"Retrieved Token:\", token); // Check if token is retrieved correctly\r\n\r\n  // Load bookmarks on component mount\r\n  useEffect(() => {\r\n    const fetchBookmarks = async () => {\r\n      if (!token) {\r\n        console.error(\"No token found in localStorage\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        console.log(\"Bookmarks fetched:\", response.data); // Debugging\r\n        const userBookmarks = response.data;\r\n        setBookmarked(userBookmarks.includes(question.id));\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarks:', error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n\r\n    fetchBookmarks();\r\n  }, [question.id, token]);\r\n\r\n  // Handle bookmark toggle\r\n  const handleBookmark = async () => {\r\n    if (!token) {\r\n      console.error(\"No token found in localStorage\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const bookmarkRequest = { questionId: question.id };\r\n      const url = bookmarked\r\n        ? 'http://localhost:5208/api/bookmarks/remove'\r\n        : 'http://localhost:5208/api/bookmarks/add';\r\n\r\n      const response = await axios.post(url, bookmarkRequest, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      console.log(\"Bookmark operation response:\", response.data); // Debugging\r\n\r\n      setBookmarked(!bookmarked);\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question.title}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
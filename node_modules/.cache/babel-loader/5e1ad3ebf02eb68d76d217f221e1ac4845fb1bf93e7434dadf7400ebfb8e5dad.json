{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const bookmarksResponse = await axios.get('http://localhost:5208/api/bookmarks/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const questionIds = bookmarksResponse.data.data; // Verify this is an array\n\n        if (!questionIds || questionIds.length === 0) {\n          setError('No bookmarks found');\n          return;\n        }\n        const questionsPromises = questionIds.map(id => axios.get(`http://localhost:5208/api/questions/${id}`).catch(err => {\n          console.error(`Error fetching question with ID ${id}:`, err);\n          return null;\n        }));\n        const questionsResponses = await Promise.all(questionsPromises);\n        const detailedQuestions = questionsResponses.filter(res => res && res.data) // Filter out null responses\n        .map(res => res.data);\n        if (detailedQuestions.length === 0) {\n          setError('No valid questions found for your bookmarks.');\n        } else {\n          setBookmarkedQuestions(detailedQuestions);\n        }\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n        setError('An error occurred while fetching your bookmarks.');\n      }\n    };\n    fetchBookmarkedQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : bookmarkedQuestions.length > 0 ? bookmarkedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAndCodeBlock, {\n        questionId: question.id,\n        code: question.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your bookmarked questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"fhp12uww1ey8a/0i/POsWJiz8JQ=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionAndCodeBlock","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","error","setError","fetchBookmarkedQuestions","token","localStorage","getItem","bookmarksResponse","get","headers","Authorization","questionIds","data","length","questionsPromises","map","id","catch","err","console","questionsResponses","Promise","all","detailedQuestions","filter","res","children","fileName","_jsxFileName","lineNumber","columnNumber","question","questionText","questionId","code","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\n\nconst UserDashboard = () => {\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const bookmarksResponse = await axios.get('http://localhost:5208/api/bookmarks/user', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const questionIds = bookmarksResponse.data.data; // Verify this is an array\n\n        if (!questionIds || questionIds.length === 0) {\n          setError('No bookmarks found');\n          return;\n        }\n\n        const questionsPromises = questionIds.map((id) =>\n          axios.get(`http://localhost:5208/api/questions/${id}`).catch((err) => {\n            console.error(`Error fetching question with ID ${id}:`, err);\n            return null;\n          })\n        );\n\n        const questionsResponses = await Promise.all(questionsPromises);\n        const detailedQuestions = questionsResponses\n          .filter((res) => res && res.data) // Filter out null responses\n          .map((res) => res.data);\n\n        if (detailedQuestions.length === 0) {\n          setError('No valid questions found for your bookmarks.');\n        } else {\n          setBookmarkedQuestions(detailedQuestions);\n        }\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n        setError('An error occurred while fetching your bookmarks.');\n      }\n    };\n\n    fetchBookmarkedQuestions();\n  }, []);\n\n  return (\n    <div>\n      <h2>Your Bookmarked Questions</h2>\n      {error ? (\n        <p>{error}</p>\n      ) : bookmarkedQuestions.length > 0 ? (\n        bookmarkedQuestions.map((question) => (\n          <div key={question.id}>\n            <h3>{question.questionText}</h3>\n            <QuestionAndCodeBlock questionId={question.id} code={question.codeSnippet} />\n          </div>\n        ))\n      ) : (\n        <p>Loading your bookmarked questions...</p>\n      )}\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionAndCodeBlock.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport copyIcon from '../assets/copy-icon-size_24.png';\nimport bookmarkService from './bookmarkService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionAndCodeBlock = ({\n  questionId,\n  questionText,\n  code\n}) => {\n  _s();\n  const [isBookmarked, setIsBookmarked] = React.useState(false);\n  React.useEffect(() => {\n    const checkIfBookmarked = async () => {\n      try {\n        const bookmarks = await bookmarkService.getBookmarks();\n        setIsBookmarked(bookmarks.some(q => q.id === questionId));\n      } catch (error) {\n        console.error('Error checking bookmark status:', error);\n      }\n    };\n    checkIfBookmarked();\n  }, [questionId]);\n  const handleBookmark = async () => {\n    try {\n      if (isBookmarked) {\n        await bookmarkService.removeBookmark({\n          questionId\n        });\n        setIsBookmarked(false);\n        alert(\"Bookmark removed successfully!\");\n      } else {\n        const response = await bookmarkService.addBookmark({\n          questionId\n        });\n        if (response) {\n          setIsBookmarked(true);\n          alert(\"Question bookmarked successfully!\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error during bookmarking:\", error);\n      alert(\"An error occurred while bookmarking the question.\");\n    }\n  };\n  const copyToClipboard = () => {\n    if (code) {\n      navigator.clipboard.writeText(code);\n      alert('Code copied to clipboard!');\n    } else {\n      alert('No code available to copy!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-and-code-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-block-container slide-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-block fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: copyToClipboard,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: copyIcon,\n            alt: \"Copy\",\n            className: \"copy-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookmark,\n      children: isBookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionAndCodeBlock, \"HVjfSBH6ahpS7Dxg0PeB8Q0IWXk=\");\n_c = QuestionAndCodeBlock;\nexport default QuestionAndCodeBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionAndCodeBlock\");","map":{"version":3,"names":["React","copyIcon","bookmarkService","jsxDEV","_jsxDEV","QuestionAndCodeBlock","questionId","questionText","code","_s","isBookmarked","setIsBookmarked","useState","useEffect","checkIfBookmarked","bookmarks","getBookmarks","some","q","id","error","console","handleBookmark","removeBookmark","alert","response","addBookmark","copyToClipboard","navigator","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionAndCodeBlock.js"],"sourcesContent":["import React from 'react';\r\nimport copyIcon from '../assets/copy-icon-size_24.png'; \r\nimport bookmarkService from './bookmarkService.js';\r\n\r\nconst QuestionAndCodeBlock = ({ questionId, questionText, code }) => {\r\n  const [isBookmarked, setIsBookmarked] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const checkIfBookmarked = async () => {\r\n      try {\r\n        const bookmarks = await bookmarkService.getBookmarks();\r\n        setIsBookmarked(bookmarks.some((q) => q.id === questionId));\r\n      } catch (error) {\r\n        console.error('Error checking bookmark status:', error);\r\n      }\r\n    };\r\n\r\n    checkIfBookmarked();\r\n  }, [questionId]);\r\n\r\n  const handleBookmark = async () => {\r\n    try {\r\n      if (isBookmarked) {\r\n        await bookmarkService.removeBookmark({ questionId });\r\n        setIsBookmarked(false);\r\n        alert(\"Bookmark removed successfully!\");\r\n      } else {\r\n        const response = await bookmarkService.addBookmark({ questionId });\r\n        if (response) {\r\n          setIsBookmarked(true);\r\n          alert(\"Question bookmarked successfully!\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during bookmarking:\", error);\r\n      alert(\"An error occurred while bookmarking the question.\");\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    if (code) {\r\n      navigator.clipboard.writeText(code);\r\n      alert('Code copied to clipboard!');\r\n    } else {\r\n      alert('No code available to copy!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-and-code-block\">\r\n      <h2>{questionText}</h2> {/* Added question text display */}\r\n      <div className=\"code-block-container slide-in\">\r\n        <div className=\"code-block fade-in\">\r\n          <pre>\r\n            <code>{code}</code>\r\n          </pre>\r\n          <button className=\"copy-button\" onClick={copyToClipboard}>\r\n            <img src={copyIcon} alt=\"Copy\" className=\"copy-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleBookmark}>\r\n        {isBookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAndCodeBlock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
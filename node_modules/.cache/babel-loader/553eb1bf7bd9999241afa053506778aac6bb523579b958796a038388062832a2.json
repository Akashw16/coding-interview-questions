{"ast":null,"code":"import axios from 'axios';\n\n// Add bookmark\nexport const addBookmark = async bookmarkRequest => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    console.error('No token found in localStorage');\n    return;\n  }\n  try {\n    const response = await axios.post('http://localhost:5208/api/bookmarks/add', bookmarkRequest, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding bookmark:', error);\n    throw error;\n  }\n};\n\n// Remove bookmark\nexport const removeBookmark = async (userId, questionId) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    console.error('No token found in localStorage');\n    return;\n  }\n  try {\n    const response = await axios.delete(`http://localhost:5208/api/bookmarks/remove`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      data: {\n        userId,\n        questionId\n      } // Pass userId and questionId in the request body\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error removing bookmark:', error);\n    throw error;\n  }\n};\n\n// Fetch user bookmarks\nexport const fetchUserBookmarks = async userId => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    console.error('No token found in localStorage');\n    return [];\n  }\n  try {\n    const response = await axios.get(`http://localhost:5208/api/bookmarks/user/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bookmarks:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","addBookmark","bookmarkRequest","token","localStorage","getItem","console","error","response","post","headers","data","removeBookmark","userId","questionId","delete","fetchUserBookmarks","get"],"sources":["E:/website/coding-interview-questions/src/components/bookmarkApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Add bookmark\r\nexport const addBookmark = async (bookmarkRequest) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    console.error('No token found in localStorage');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:5208/api/bookmarks/add', bookmarkRequest, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding bookmark:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Remove bookmark\r\nexport const removeBookmark = async (userId, questionId) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    console.error('No token found in localStorage');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.delete(`http://localhost:5208/api/bookmarks/remove`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: { userId, questionId } // Pass userId and questionId in the request body\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error removing bookmark:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch user bookmarks\r\nexport const fetchUserBookmarks = async (userId) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    console.error('No token found in localStorage');\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(`http://localhost:5208/api/bookmarks/user/${userId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching bookmarks:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,eAAe,IAAK;EACpD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IAC/C;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,yCAAyC,EAAEP,eAAe,EAAE;MAC5FQ,OAAO,EAAE;QACP,eAAe,EAAE,UAAUP,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,UAAU,KAAK;EAC1D,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IAC/C;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACe,MAAM,CAAC,4CAA4C,EAAE;MAChFL,OAAO,EAAE;QACP,eAAe,EAAE,UAAUP,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB,CAAC;MACDQ,IAAI,EAAE;QAAEE,MAAM;QAAEC;MAAW,CAAC,CAAC;IAC/B,CAAC,CAAC;IACF,OAAON,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,kBAAkB,GAAG,MAAOH,MAAM,IAAK;EAClD,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IAC/C,OAAO,EAAE;EACX;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACiB,GAAG,CAAC,4CAA4CJ,MAAM,EAAE,EAAE;MACrFH,OAAO,EAAE;QACP,eAAe,EAAE,UAAUP,KAAK;MAClC;IACF,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
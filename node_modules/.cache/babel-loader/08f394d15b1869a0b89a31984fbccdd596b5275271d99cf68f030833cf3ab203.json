{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const bookmarksResponse = await axios.get('http://localhost:5208/api/bookmarks/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const questionIds = bookmarksResponse.data;\n\n        // Fetch the details for each bookmarked question\n        const questionsPromises = questionIds.map(id => axios.get(`http://localhost:5208/api/questions/${id}`));\n        const questionsResponses = await Promise.all(questionsPromises);\n        const detailedQuestions = questionsResponses.map(res => res.data);\n        setBookmarkedQuestions(detailedQuestions);\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n      }\n    };\n    fetchBookmarkedQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), bookmarkedQuestions.length > 0 ? bookmarkedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAndCodeBlock, {\n        questionId: question.id,\n        code: question.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no bookmarked questions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"d32rATL6AIkwjwUOLpM1Gu/cwms=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionAndCodeBlock","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","fetchBookmarkedQuestions","token","localStorage","getItem","bookmarksResponse","get","headers","Authorization","questionIds","data","questionsPromises","map","id","questionsResponses","Promise","all","detailedQuestions","res","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","question","questionText","questionId","code","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock';\r\n\r\nconst UserDashboard = () => {\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookmarkedQuestions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const bookmarksResponse = await axios.get('http://localhost:5208/api/bookmarks/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const questionIds = bookmarksResponse.data;\r\n\r\n        // Fetch the details for each bookmarked question\r\n        const questionsPromises = questionIds.map((id) =>\r\n          axios.get(`http://localhost:5208/api/questions/${id}`)\r\n        );\r\n\r\n        const questionsResponses = await Promise.all(questionsPromises);\r\n        const detailedQuestions = questionsResponses.map((res) => res.data);\r\n\r\n        setBookmarkedQuestions(detailedQuestions);\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarked questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchBookmarkedQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Bookmarked Questions</h2>\r\n      {bookmarkedQuestions.length > 0 ? (\r\n        bookmarkedQuestions.map((question) => (\r\n          <div key={question.id}>\r\n            <h3>{question.questionText}</h3>\r\n            <QuestionAndCodeBlock questionId={question.id} code={question.codeSnippet} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>You have no bookmarked questions.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd,MAAMS,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,iBAAiB,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,0CAA0C,EAAE;UACpFC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMO,WAAW,GAAGJ,iBAAiB,CAACK,IAAI;;QAE1C;QACA,MAAMC,iBAAiB,GAAGF,WAAW,CAACG,GAAG,CAAEC,EAAE,IAC3CpB,KAAK,CAACa,GAAG,CAAC,uCAAuCO,EAAE,EAAE,CACvD,CAAC;QAED,MAAMC,kBAAkB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,iBAAiB,CAAC;QAC/D,MAAMM,iBAAiB,GAAGH,kBAAkB,CAACF,GAAG,CAAEM,GAAG,IAAKA,GAAG,CAACR,IAAI,CAAC;QAEnEV,sBAAsB,CAACiB,iBAAiB,CAAC;MAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDlB,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjC1B,mBAAmB,CAAC2B,MAAM,GAAG,CAAC,GAC7B3B,mBAAmB,CAACa,GAAG,CAAEe,QAAQ,iBAC/B/B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAKM,QAAQ,CAACC;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChC7B,OAAA,CAACF,oBAAoB;QAACmC,UAAU,EAAEF,QAAQ,CAACd,EAAG;QAACiB,IAAI,EAAEH,QAAQ,CAACI;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFrEE,QAAQ,CAACd,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACN,CAAC,gBAEF7B,OAAA;MAAAyB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/CID,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
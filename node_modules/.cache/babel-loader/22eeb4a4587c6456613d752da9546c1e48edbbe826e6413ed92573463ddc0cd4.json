{"ast":null,"code":"import axios from 'axios';\nconst bookmarkService = {\n  getBookmarks: async token => {\n    try {\n      const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching bookmarks:', error);\n      throw error;\n    }\n  },\n  addBookmark: async bookmarkRequest => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5208/api/bookmarks/add', bookmarkRequest, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding bookmark:', error);\n      throw error;\n    }\n  },\n  removeBookmark: async bookmarkRequest => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5208/api/bookmarks/remove', bookmarkRequest, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error removing bookmark:', error);\n      throw error;\n    }\n  }\n};\nexport default bookmarkService;","map":{"version":3,"names":["axios","bookmarkService","getBookmarks","token","response","get","headers","Authorization","data","error","console","addBookmark","bookmarkRequest","localStorage","getItem","post","removeBookmark"],"sources":["E:/website/coding-interview-questions/src/components/bookmarkService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst bookmarkService = {\r\n  getBookmarks: async (token) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5208/api/bookmarks/user', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching bookmarks:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  addBookmark: async (bookmarkRequest) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:5208/api/bookmarks/add', bookmarkRequest, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error adding bookmark:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  removeBookmark: async (bookmarkRequest) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:5208/api/bookmarks/remove', bookmarkRequest, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error removing bookmark:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default bookmarkService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAG;EACtBC,YAAY,EAAE,MAAOC,KAAK,IAAK;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,0CAA0C,EAAE;QAC3EC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,KAAK;QAChC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,WAAW,EAAE,MAAOC,eAAe,IAAK;IACtC,IAAI;MACF,MAAMT,KAAK,GAAGU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAAEH,eAAe,EAAE;QAC5FN,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,KAAK;QAChC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDO,cAAc,EAAE,MAAOJ,eAAe,IAAK;IACzC,IAAI;MACF,MAAMT,KAAK,GAAGU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,IAAI,CAAC,4CAA4C,EAAEH,eAAe,EAAE;QAC/FN,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,KAAK;QAChC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
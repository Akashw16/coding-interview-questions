{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport '../styles/QuestionBlock.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = ({\n  question\n}) => {\n  _s();\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // Load bookmark status from localStorage on component mount\n  useEffect(() => {\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\n    setBookmarked(savedBookmarks.some(q => q.id === question.id));\n  }, [question]);\n\n  // Handle bookmark toggle\n  const handleBookmark = () => {\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\n    let updatedBookmarks;\n    const decodedToken = jwtDecode(token); // If you're decoding a token, make sure to use this value.\n\n    if (bookmarked) {\n      updatedBookmarks = savedBookmarks.filter(q => q.id !== question.id);\n    } else {\n      updatedBookmarks = [...savedBookmarks, question];\n    }\n    localStorage.setItem('bookmarks', JSON.stringify(updatedBookmarks));\n    setBookmarked(!bookmarked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      languages: ['C', 'C++', 'Java', 'Python'],\n      onTabClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n      code: question.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bookmark-button\",\n      onClick: handleBookmark,\n      children: bookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBlock, \"cgfO4QFgT+YKaEUM6gxq7mPRzac=\");\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","CodeBlock","jwtDecode","jsxDEV","_jsxDEV","QuestionBlock","question","_s","bookmarked","setBookmarked","savedBookmarks","JSON","parse","localStorage","getItem","some","q","id","handleBookmark","updatedBookmarks","decodedToken","token","filter","setItem","stringify","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","languages","onTabClick","code","onClick","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport '../styles/QuestionBlock.css';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\nconst QuestionBlock = ({ question }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  // Load bookmark status from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\r\n    setBookmarked(savedBookmarks.some((q) => q.id === question.id));\r\n  }, [question]);\r\n\r\n  // Handle bookmark toggle\r\n  const handleBookmark = () => {\r\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\r\n    let updatedBookmarks;\r\n\r\n    const decodedToken = jwtDecode(token); // If you're decoding a token, make sure to use this value.\r\n\r\n    if (bookmarked) {\r\n      updatedBookmarks = savedBookmarks.filter((q) => q.id !== question.id);\r\n    } else {\r\n      updatedBookmarks = [...savedBookmarks, question];\r\n    }\r\n\r\n    localStorage.setItem('bookmarks', JSON.stringify(updatedBookmarks));\r\n    setBookmarked(!bookmarked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question.title}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={question.code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,6BAA6B;AACpC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1EL,aAAa,CAACC,cAAc,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKX,QAAQ,CAACW,EAAE,CAAC,CAAC;EACjE,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMR,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1E,IAAIK,gBAAgB;IAEpB,MAAMC,YAAY,GAAGlB,SAAS,CAACmB,KAAK,CAAC,CAAC,CAAC;;IAEvC,IAAIb,UAAU,EAAE;MACdW,gBAAgB,GAAGT,cAAc,CAACY,MAAM,CAAEN,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKX,QAAQ,CAACW,EAAE,CAAC;IACvE,CAAC,MAAM;MACLE,gBAAgB,GAAG,CAAC,GAAGT,cAAc,EAAEJ,QAAQ,CAAC;IAClD;IAEAO,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEZ,IAAI,CAACa,SAAS,CAACL,gBAAgB,CAAC,CAAC;IACnEV,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtB,OAAA;MAAAsB,QAAA,EAAKpB,QAAQ,CAACqB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzB3B,OAAA,CAACJ,IAAI;MAACgC,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAE;MAACC,UAAU,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE3B,OAAA,CAACH,SAAS;MAACiC,IAAI,EAAE5B,QAAQ,CAAC4B;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA;MAAQqB,SAAS,EAAC,iBAAiB;MAACU,OAAO,EAAEjB,cAAe;MAAAQ,QAAA,EACzDlB,UAAU,GAAG,YAAY,GAAG;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
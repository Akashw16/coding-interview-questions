{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport '../styles/Login.css';\nconst Login = ({\n  onLogin\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5208/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log('Response Status:', response.status);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Login successful:', data);\n\n        // Store token and username\n        localStorage.setItem('token', data.Token);\n        localStorage.setItem('loggedInUser', username);\n\n        // Assuming role is included in the response or token payload\n        const role = data.role || 'user'; // Default to 'user' if role isn't provided\n        console.log('User Role:', role);\n        localStorage.setItem('role', role);\n        onLogin(username);\n      } else {\n        setError('Invalid credentials');\n        console.error('Login failed:', response.status);\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Login\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","Login","onLogin","username","setUsername","password","setPassword","error","setError","handleLogin","response","fetch","method","headers","body","JSON","stringify","console","log","status","ok","data","json","localStorage","setItem","Token","role","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick"],"sources":["E:/website/coding-interview-questions/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Login.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5208/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      console.log('Response Status:', response.status);\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Login successful:', data);\r\n\r\n        // Store token and username\r\n        localStorage.setItem('token', data.Token);\r\n        localStorage.setItem('loggedInUser', username);\r\n\r\n        // Assuming role is included in the response or token payload\r\n        const role = data.role || 'user'; // Default to 'user' if role isn't provided\r\n        console.log('User Role:', role);\r\n\r\n        localStorage.setItem('role', role);\r\n        onLogin(username);\r\n      } else {\r\n        setError('Invalid credentials');\r\n        console.error('Login failed:', response.status);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error during login:', err);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionAndCodeBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/QuestionsList.css';\nimport copyIcon from '../assets/copy-icon-size_24.png';\nimport bookmarkService from './bookmarkService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionAndCodeBlock = ({\n  questionId,\n  code,\n  bookmarked: initialBookmarked\n}) => {\n  _s();\n  const [bookmarked, setBookmarked] = useState(initialBookmarked);\n  const handleBookmarkToggle = async () => {\n    try {\n      if (bookmarked) {\n        await bookmarkService.removeBookmark({\n          questionId\n        });\n        setBookmarked(false);\n      } else {\n        await bookmarkService.addBookmark({\n          questionId\n        });\n        setBookmarked(true);\n      }\n    } catch (error) {\n      console.error(\"Error during bookmarking:\", error);\n      alert(\"An error occurred while toggling the bookmark.\");\n    }\n  };\n  const copyToClipboard = () => {\n    if (code) {\n      navigator.clipboard.writeText(code);\n      alert('Code copied to clipboard!');\n    } else {\n      alert('No code available to copy!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-and-code-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-block-container slide-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-block fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: copyToClipboard,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: copyIcon,\n            alt: \"Copy\",\n            className: \"copy-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookmarkToggle,\n      children: bookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionAndCodeBlock, \"53KX/mKTzhM/ScUojCq2kDRRPAk=\");\n_c = QuestionAndCodeBlock;\nexport default QuestionAndCodeBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionAndCodeBlock\");","map":{"version":3,"names":["React","useState","useEffect","copyIcon","bookmarkService","jsxDEV","_jsxDEV","QuestionAndCodeBlock","questionId","code","bookmarked","initialBookmarked","_s","setBookmarked","handleBookmarkToggle","removeBookmark","addBookmark","error","console","alert","copyToClipboard","navigator","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionAndCodeBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/QuestionsList.css';\r\nimport copyIcon from '../assets/copy-icon-size_24.png';\r\nimport bookmarkService from './bookmarkService.js';\r\n\r\nconst QuestionAndCodeBlock = ({ questionId, code, bookmarked: initialBookmarked }) => {\r\n  const [bookmarked, setBookmarked] = useState(initialBookmarked);\r\n\r\n  const handleBookmarkToggle = async () => {\r\n    try {\r\n      if (bookmarked) {\r\n        await bookmarkService.removeBookmark({ questionId });\r\n        setBookmarked(false);\r\n      } else {\r\n        await bookmarkService.addBookmark({ questionId });\r\n        setBookmarked(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during bookmarking:\", error);\r\n      alert(\"An error occurred while toggling the bookmark.\");\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    if (code) {\r\n      navigator.clipboard.writeText(code);\r\n      alert('Code copied to clipboard!');\r\n    } else {\r\n      alert('No code available to copy!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-and-code-block\">\r\n      <div className=\"code-block-container slide-in\">\r\n        <div className=\"code-block fade-in\">\r\n          <pre>\r\n            <code>{code}</code>\r\n          </pre>\r\n          <button className=\"copy-button\" onClick={copyToClipboard}>\r\n            <img src={copyIcon} alt=\"Copy\" className=\"copy-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleBookmarkToggle}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAndCodeBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,6BAA6B;AACpC,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,eAAe,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,IAAI;EAAEC,UAAU,EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACF,UAAU,EAAEG,aAAa,CAAC,GAAGZ,QAAQ,CAACU,iBAAiB,CAAC;EAE/D,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,IAAIJ,UAAU,EAAE;QACd,MAAMN,eAAe,CAACW,cAAc,CAAC;UAAEP;QAAW,CAAC,CAAC;QACpDK,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,MAAM;QACL,MAAMT,eAAe,CAACY,WAAW,CAAC;UAAER;QAAW,CAAC,CAAC;QACjDK,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIX,IAAI,EAAE;MACRY,SAAS,CAACC,SAAS,CAACC,SAAS,CAACd,IAAI,CAAC;MACnCU,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,MAAM;MACLA,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEb,OAAA;IAAKkB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCnB,OAAA;MAAKkB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5CnB,OAAA;QAAKkB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCnB,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YAAAmB,QAAA,EAAOhB;UAAI;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACNvB,OAAA;UAAQkB,SAAS,EAAC,aAAa;UAACM,OAAO,EAAEV,eAAgB;UAAAK,QAAA,eACvDnB,OAAA;YAAKyB,GAAG,EAAE5B,QAAS;YAAC6B,GAAG,EAAC,MAAM;YAACR,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvB,OAAA;MAAQwB,OAAO,EAAEhB,oBAAqB;MAAAW,QAAA,EACnCf,UAAU,GAAG,YAAY,GAAG;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5CIL,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AA8C1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
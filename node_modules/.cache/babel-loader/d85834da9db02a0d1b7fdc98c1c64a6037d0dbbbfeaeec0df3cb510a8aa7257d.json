{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport bookmarkService from './bookmarkService';\nimport copyIcon from '../assets/copy-icon-size_24.png';\nimport './UserDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const bookmarks = await bookmarkService.getBookmarks();\n        setBookmarkedQuestions(bookmarks);\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n      }\n    };\n    fetchBookmarkedQuestions();\n  }, []);\n  const copyToClipboard = code => {\n    if (code) {\n      navigator.clipboard.writeText(code);\n      alert('Code copied to clipboard!');\n    } else {\n      alert('No code available to copy!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"user-dashboard-heading\",\n      children: \"Your Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), bookmarkedQuestions.length > 0 ? bookmarkedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-dashboard-question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-dashboard-question-text\",\n        children: [index + 1, \". \", question.questionText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-dashboard-code-block-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"user-dashboard-code-block\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: question.codeSnippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"user-dashboard-copy-button\",\n          onClick: () => copyToClipboard(question.codeSnippet),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: copyIcon,\n            alt: \"Copy\",\n            className: \"user-dashboard-copy-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: question.isBookmarked ? 'bookmarked' : '',\n        children: question.isBookmarked ? 'Unbookmark' : 'Bookmark'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookmarked questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"d32rATL6AIkwjwUOLpM1Gu/cwms=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","bookmarkService","copyIcon","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","fetchBookmarkedQuestions","bookmarks","getBookmarks","error","console","copyToClipboard","code","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","questionText","codeSnippet","onClick","src","alt","isBookmarked","id","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bookmarkService from './bookmarkService';\r\nimport copyIcon from '../assets/copy-icon-size_24.png';\r\nimport './UserDashboard.css';\r\n\r\nconst UserDashboard = () => {\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookmarkedQuestions = async () => {\r\n      try {\r\n        const bookmarks = await bookmarkService.getBookmarks();\r\n        setBookmarkedQuestions(bookmarks);\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarked questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchBookmarkedQuestions();\r\n  }, []);\r\n\r\n  const copyToClipboard = (code) => {\r\n    if (code) {\r\n      navigator.clipboard.writeText(code);\r\n      alert('Code copied to clipboard!');\r\n    } else {\r\n      alert('No code available to copy!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-dashboard-container\">\r\n      <h1 className=\"user-dashboard-heading\">Your Bookmarked Questions</h1>\r\n      {bookmarkedQuestions.length > 0 ? (\r\n        bookmarkedQuestions.map((question, index) => (\r\n          <div key={question.id} className=\"user-dashboard-question-block\">\r\n            <div className=\"user-dashboard-question-text\">\r\n              {index + 1}. {question.questionText}\r\n            </div>\r\n            <div className=\"user-dashboard-code-block-container\">\r\n              <pre className=\"user-dashboard-code-block\">\r\n                <code>{question.codeSnippet}</code>\r\n              </pre>\r\n              <button\r\n                className=\"user-dashboard-copy-button\"\r\n                onClick={() => copyToClipboard(question.codeSnippet)}\r\n              >\r\n                <img src={copyIcon} alt=\"Copy\" className=\"user-dashboard-copy-icon\" />\r\n              </button>\r\n            </div>\r\n            <button className={question.isBookmarked ? 'bookmarked' : ''}>\r\n              {question.isBookmarked ? 'Unbookmark' : 'Bookmark'}\r\n            </button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No bookmarked questions found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
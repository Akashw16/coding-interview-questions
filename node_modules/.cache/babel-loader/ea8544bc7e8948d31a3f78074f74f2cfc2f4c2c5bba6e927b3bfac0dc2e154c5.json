{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport bookmarkService from './bookmarkService.js';\nimport '../styles/UserDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchBookmarks = async () => {\n      const userId = localStorage.getItem('loggedInUser');\n      if (userId) {\n        try {\n          const bookmarks = await bookmarkService.getBookmarks(userId);\n          setBookmarkedQuestions(bookmarks);\n        } catch (error) {\n          console.error('Error fetching bookmarks:', error);\n        }\n      }\n    };\n    fetchBookmarks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), bookmarkedQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bookmarkedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: question.codeSnippet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no bookmarked questions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"d32rATL6AIkwjwUOLpM1Gu/cwms=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","bookmarkService","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","fetchBookmarks","userId","localStorage","getItem","bookmarks","getBookmarks","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","questionText","codeSnippet","id","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bookmarkService from './bookmarkService.js';\r\nimport '../styles/UserDashboard.css';\r\n\r\nconst UserDashboard = () => {\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookmarks = async () => {\r\n      const userId = localStorage.getItem('loggedInUser');\r\n      if (userId) {\r\n        try {\r\n          const bookmarks = await bookmarkService.getBookmarks(userId);\r\n          setBookmarkedQuestions(bookmarks);\r\n        } catch (error) {\r\n          console.error('Error fetching bookmarks:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchBookmarks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>View Bookmarked Questions</h2>\r\n      {bookmarkedQuestions.length > 0 ? (\r\n        <ul>\r\n          {bookmarkedQuestions.map((question) => (\r\n            <li key={question.id}>\r\n              <h3>{question.questionText}</h3>\r\n              <pre>{question.codeSnippet}</pre>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>You have no bookmarked questions.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACnD,IAAIF,MAAM,EAAE;QACV,IAAI;UACF,MAAMG,SAAS,GAAG,MAAMX,eAAe,CAACY,YAAY,CAACJ,MAAM,CAAC;UAC5DF,sBAAsB,CAACK,SAAS,CAAC;QACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF;IACF,CAAC;IACDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCf,mBAAmB,CAACgB,MAAM,GAAG,CAAC,gBAC7BnB,OAAA;MAAAc,QAAA,EACGX,mBAAmB,CAACiB,GAAG,CAAEC,QAAQ,iBAChCrB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAKO,QAAQ,CAACC;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChClB,OAAA;UAAAc,QAAA,EAAMO,QAAQ,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAF1BG,QAAQ,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlB,OAAA;MAAAc,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAnCID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const [questionsData, setQuestionsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      console.log('Attempting to fetch questions...'); // Start of API call\n\n      try {\n        const response = await axios.get('http://localhost:5208/api/questions');\n        console.log('Fetched questions:', response.data); // Log the fetched data\n\n        setQuestionsData(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        if (error.response) {\n          console.error('Server responded with an error:', error.response.data);\n        } else if (error.request) {\n          console.error('Request made but no response received:', error.request);\n        } else {\n          console.error('Error setting up the request:', error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : questionsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available or an issue occurred while fetching data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : questionsData.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: question.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"D8Wk+I4+jyWm36f/xoDzcoIuMj8=\");\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuestionsList","_s","questionsData","setQuestionsData","loading","setLoading","fetchQuestions","console","log","response","get","data","error","request","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","questionText","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuestionsList = () => {\r\n  const [questionsData, setQuestionsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      console.log('Attempting to fetch questions...');  // Start of API call\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:5208/api/questions');\r\n        \r\n        console.log('Fetched questions:', response.data);  // Log the fetched data\r\n        \r\n        setQuestionsData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n\r\n        if (error.response) {\r\n          console.error('Server responded with an error:', error.response.data);\r\n        } else if (error.request) {\r\n          console.error('Request made but no response received:', error.request);\r\n        } else {\r\n          console.error('Error setting up the request:', error.message);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading questions...</p>\r\n      ) : questionsData.length === 0 ? (\r\n        <p>No questions available or an issue occurred while fetching data.</p>\r\n      ) : (\r\n        questionsData.map((question, index) => (\r\n          <div key={index}>\r\n            <h2>{question.questionText}</h2>\r\n            <pre>{question.codeSnippet}</pre>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAE;;MAElD,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,CAAC;QAEvEH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;;QAEnDR,gBAAgB,CAACM,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QAEjD,IAAIA,KAAK,CAACH,QAAQ,EAAE;UAClBF,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;QACvE,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,EAAE;UACxBN,OAAO,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACC,OAAO,CAAC;QACxE,CAAC,MAAM;UACLN,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;QAC/D;MACF,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAgB,QAAA,EACGX,OAAO,gBACNL,OAAA;MAAAgB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACzBjB,aAAa,CAACkB,MAAM,KAAK,CAAC,gBAC5BrB,OAAA;MAAAgB,QAAA,EAAG;IAAgE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEvEjB,aAAa,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChCxB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKO,QAAQ,CAACE;MAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCpB,OAAA;QAAAgB,QAAA,EAAMO,QAAQ,CAACG;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFzBI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhDID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
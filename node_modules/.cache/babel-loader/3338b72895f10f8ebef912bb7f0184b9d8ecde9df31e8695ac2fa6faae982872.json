{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport bookmarkService from './bookmarkService';\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock'; // Assuming this component handles displaying the question and code\nimport '../styles/QuestionsList.css'; // Make sure to include the same styling as the home page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchBookmarkedQuestions = async () => {\n      try {\n        const bookmarks = await bookmarkService.getBookmarks();\n        setBookmarkedQuestions(bookmarks);\n      } catch (error) {\n        console.error('Error fetching bookmarked questions:', error);\n      }\n    };\n    fetchBookmarkedQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Bookmarked Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), bookmarkedQuestions.length > 0 ? bookmarkedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-and-code-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAndCodeBlock, {\n        questionId: question.id,\n        code: question.codeSnippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookmarked questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"d32rATL6AIkwjwUOLpM1Gu/cwms=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","bookmarkService","QuestionAndCodeBlock","jsxDEV","_jsxDEV","UserDashboard","_s","bookmarkedQuestions","setBookmarkedQuestions","fetchBookmarkedQuestions","bookmarks","getBookmarks","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","questionText","questionId","id","code","codeSnippet","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bookmarkService from './bookmarkService';\r\nimport QuestionAndCodeBlock from './QuestionAndCodeBlock'; // Assuming this component handles displaying the question and code\r\nimport '../styles/QuestionsList.css'; // Make sure to include the same styling as the home page\r\n\r\nconst UserDashboard = () => {\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookmarkedQuestions = async () => {\r\n      try {\r\n        const bookmarks = await bookmarkService.getBookmarks();\r\n        setBookmarkedQuestions(bookmarks);\r\n      } catch (error) {\r\n        console.error('Error fetching bookmarked questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchBookmarkedQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"questions-list\">\r\n      <h1>Your Bookmarked Questions</h1>\r\n      {bookmarkedQuestions.length > 0 ? (\r\n        bookmarkedQuestions.map((question) => (\r\n          <div key={question.id} className=\"question-and-code-block\">\r\n            <h2>{question.questionText}</h2>\r\n            <QuestionAndCodeBlock questionId={question.id} code={question.codeSnippet} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No bookmarked questions found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,oBAAoB,MAAM,wBAAwB,CAAC,CAAC;AAC3D,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd,MAAMS,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMT,eAAe,CAACU,YAAY,CAAC,CAAC;QACtDH,sBAAsB,CAACE,SAAS,CAAC;MACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDH,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCZ,mBAAmB,CAACa,MAAM,GAAG,CAAC,GAC7Bb,mBAAmB,CAACc,GAAG,CAAEC,QAAQ,iBAC/BlB,OAAA;MAAuBU,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACxDX,OAAA;QAAAW,QAAA,EAAKO,QAAQ,CAACC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCf,OAAA,CAACF,oBAAoB;QAACsB,UAAU,EAAEF,QAAQ,CAACG,EAAG;QAACC,IAAI,EAAEJ,QAAQ,CAACK;MAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFrEG,QAAQ,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACN,CAAC,gBAEFf,OAAA;MAAAW,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
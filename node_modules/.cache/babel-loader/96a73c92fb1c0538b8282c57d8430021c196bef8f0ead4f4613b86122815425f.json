{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { getBookmarks, addBookmark } from './bookmarkApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = ({\n  question\n}) => {\n  _s();\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // Function to load bookmarks for the logged-in user\n  const loadBookmarks = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found in localStorage');\n      return; // Stop execution if no token is present\n    }\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.userId;\n      const bookmarks = await getBookmarks(userId);\n      const isBookmarked = bookmarks.some(bookmark => bookmark.questionId === question.id);\n      setBookmarked(isBookmarked);\n    } catch (error) {\n      console.error('Error fetching bookmarks:', error);\n    }\n  };\n\n  // Function to handle bookmark action\n  const handleBookmark = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found in localStorage');\n      return; // Stop execution if no token is present\n    }\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.userId;\n      const bookmarkRequest = {\n        userId,\n        questionId: question.id\n      };\n      await addBookmark(bookmarkRequest);\n      setBookmarked(!bookmarked); // Toggle bookmark state\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  useEffect(() => {\n    loadBookmarks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookmark,\n      children: bookmarked ? 'Unbookmark' : 'Bookmark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBlock, \"cgfO4QFgT+YKaEUM6gxq7mPRzac=\");\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","getBookmarks","addBookmark","jsxDEV","_jsxDEV","QuestionBlock","question","_s","bookmarked","setBookmarked","loadBookmarks","token","localStorage","getItem","console","error","decodedToken","userId","bookmarks","isBookmarked","some","bookmark","questionId","id","handleBookmark","bookmarkRequest","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { getBookmarks, addBookmark } from './bookmarkApi';\r\n\r\nconst QuestionBlock = ({ question }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  // Function to load bookmarks for the logged-in user\r\n  const loadBookmarks = async () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      console.error('No token found in localStorage');\r\n      return;  // Stop execution if no token is present\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const userId = decodedToken.userId;\r\n\r\n      const bookmarks = await getBookmarks(userId);\r\n      const isBookmarked = bookmarks.some(bookmark => bookmark.questionId === question.id);\r\n      setBookmarked(isBookmarked);\r\n    } catch (error) {\r\n      console.error('Error fetching bookmarks:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle bookmark action\r\n  const handleBookmark = async () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      console.error('No token found in localStorage');\r\n      return;  // Stop execution if no token is present\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const userId = decodedToken.userId;\r\n\r\n      const bookmarkRequest = {\r\n        userId,\r\n        questionId: question.id,\r\n      };\r\n\r\n      await addBookmark(bookmarkRequest);\r\n      setBookmarked(!bookmarked); // Toggle bookmark state\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadBookmarks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{question.title}</h3>\r\n      <button onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C,OAAO,CAAE;IACX;IAEA,IAAI;MACF,MAAMC,YAAY,GAAGhB,SAAS,CAACW,KAAK,CAAC;MACrC,MAAMM,MAAM,GAAGD,YAAY,CAACC,MAAM;MAElC,MAAMC,SAAS,GAAG,MAAMjB,YAAY,CAACgB,MAAM,CAAC;MAC5C,MAAME,YAAY,GAAGD,SAAS,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,UAAU,KAAKhB,QAAQ,CAACiB,EAAE,CAAC;MACpFd,aAAa,CAACU,YAAY,CAAC;IAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C,OAAO,CAAE;IACX;IAEA,IAAI;MACF,MAAMC,YAAY,GAAGhB,SAAS,CAACW,KAAK,CAAC;MACrC,MAAMM,MAAM,GAAGD,YAAY,CAACC,MAAM;MAElC,MAAMQ,eAAe,GAAG;QACtBR,MAAM;QACNK,UAAU,EAAEhB,QAAQ,CAACiB;MACvB,CAAC;MAED,MAAMrB,WAAW,CAACuB,eAAe,CAAC;MAClChB,aAAa,CAAC,CAACD,UAAU,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAKpB,QAAQ,CAACqB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzB3B,OAAA;MAAQ4B,OAAO,EAAER,cAAe;MAAAE,QAAA,EAC7BlB,UAAU,GAAG,YAAY,GAAG;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DIF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA+DnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
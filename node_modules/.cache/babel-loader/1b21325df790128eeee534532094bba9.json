{"ast":null,"code":"var _jsxFileName = \"E:\\\\website\\\\coding-interview-questions\\\\src\\\\components\\\\QuestionBlock.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tabs from './Tabs';\nimport CodeBlock from './CodeBlock';\nimport '../styles/QuestionBlock.css';\nimport { addBookmark, fetchBookmarks } from './bookmarkApi';\nconst QuestionBlock = ({\n  question,\n  code,\n  userId\n}) => {\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // Load bookmark status from the backend on component mount\n  useEffect(() => {\n    const loadBookmarks = async () => {\n      try {\n        const bookmarks = await fetchBookmarks();\n        const isBookmarked = bookmarks.some(b => b.Question.Id === question.id && b.User.Id === userId);\n        setBookmarked(isBookmarked);\n      } catch (error) {\n        console.error('Error loading bookmarks:', error);\n      }\n    };\n    loadBookmarks();\n  }, [question.id, userId]);\n\n  // Handle bookmark toggle\n  const handleBookmark = async () => {\n    try {\n      if (bookmarked) {\n        await removeBookmark(question.id, userId); // Make API call to remove bookmark\n      } else {\n        await addBookmark({\n          questionId: question.id,\n          userId\n        }); // Make API call to add bookmark\n      }\n      setBookmarked(!bookmarked);\n    } catch (error) {\n      console.error('Error updating bookmark:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, question.title), /*#__PURE__*/React.createElement(Tabs, {\n    languages: ['C', 'C++', 'Java', 'Python'],\n    onTabClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CodeBlock, {\n    code: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bookmark-button\",\n    onClick: handleBookmark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, bookmarked ? 'Unbookmark' : 'Bookmark'));\n};\nexport default QuestionBlock;","map":{"version":3,"names":["React","useState","useEffect","Tabs","CodeBlock","addBookmark","fetchBookmarks","QuestionBlock","question","code","userId","bookmarked","setBookmarked","loadBookmarks","bookmarks","isBookmarked","some","b","Question","Id","id","User","error","console","handleBookmark","removeBookmark","questionId","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","languages","onTabClick","onClick"],"sources":["E:/website/coding-interview-questions/src/components/QuestionBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tabs from './Tabs';\r\nimport CodeBlock from './CodeBlock';\r\nimport '../styles/QuestionBlock.css';\r\nimport { addBookmark, fetchBookmarks } from './bookmarkApi';\r\n\r\nconst QuestionBlock = ({ question, code, userId }) => {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n\r\n  // Load bookmark status from the backend on component mount\r\n  useEffect(() => {\r\n    const loadBookmarks = async () => {\r\n      try {\r\n        const bookmarks = await fetchBookmarks();\r\n        const isBookmarked = bookmarks.some(b => b.Question.Id === question.id && b.User.Id === userId);\r\n        setBookmarked(isBookmarked);\r\n      } catch (error) {\r\n        console.error('Error loading bookmarks:', error);\r\n      }\r\n    };\r\n    loadBookmarks();\r\n  }, [question.id, userId]);\r\n\r\n  // Handle bookmark toggle\r\n  const handleBookmark = async () => {\r\n    try {\r\n      if (bookmarked) {\r\n        await removeBookmark(question.id, userId); // Make API call to remove bookmark\r\n      } else {\r\n        await addBookmark({ questionId: question.id, userId }); // Make API call to add bookmark\r\n      }\r\n      setBookmarked(!bookmarked);\r\n    } catch (error) {\r\n      console.error('Error updating bookmark:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-block\">\r\n      <h2>{question.title}</h2>\r\n      <Tabs languages={['C', 'C++', 'Java', 'Python']} onTabClick={() => {}} />\r\n      <CodeBlock code={code} />\r\n      <button className=\"bookmark-button\" onClick={handleBookmark}>\r\n        {bookmarked ? 'Unbookmark' : 'Bookmark'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBlock;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,6BAA6B;AACpC,SAASC,WAAW,EAAEC,cAAc,QAAQ,eAAe;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMR,cAAc,CAAC,CAAC;QACxC,MAAMS,YAAY,GAAGD,SAAS,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACC,EAAE,KAAKX,QAAQ,CAACY,EAAE,IAAIH,CAAC,CAACI,IAAI,CAACF,EAAE,KAAKT,MAAM,CAAC;QAC/FE,aAAa,CAACG,YAAY,CAAC;MAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,QAAQ,CAACY,EAAE,EAAEV,MAAM,CAAC,CAAC;;EAEzB;EACA,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,IAAIb,UAAU,EAAE;QACd,MAAMc,cAAc,CAACjB,QAAQ,CAACY,EAAE,EAAEV,MAAM,CAAC,CAAC,CAAC;MAC7C,CAAC,MAAM;QACL,MAAML,WAAW,CAAC;UAAEqB,UAAU,EAAElB,QAAQ,CAACY,EAAE;UAAEV;QAAO,CAAC,CAAC,CAAC,CAAC;MAC1D;MACAE,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEtB,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BlC,KAAA,CAAA2B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK1B,QAAQ,CAAC2B,KAAU,CAAC,eACzBnC,KAAA,CAAA2B,aAAA,CAACxB,IAAI;IAACiC,SAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAE;IAACC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzElC,KAAA,CAAA2B,aAAA,CAACvB,SAAS;IAACK,IAAI,EAAEA,IAAK;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzBlC,KAAA,CAAA2B,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACU,OAAO,EAAEd,cAAe;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDvB,UAAU,GAAG,YAAY,GAAG,UACvB,CACL,CAAC;AAEV,CAAC;AAED,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}